{"version":3,"sources":["components/Header.js","components/EmojiItem.js","components/EmojiContainer.js","App.js","index.js"],"names":["Header","style","textAlign","href","data-icon","data-text","data-show-count","data-size","EmojiItem","props","listStyle","width","height","margin","lineHeight","fontSize","backgroundColor","boxShadow","borderRadius","symbol","EmojiContainer","display","flexWrap","emojiData","map","emoji","key","title","App","state","searchValue","emojiList","grabValueFromInput","e","filteredEmoji","filter","item","inputvalue","target","value","toLowerCase","includes","keywords","setState","console","log","this","className","justifyContent","type","padding","outline","border","onChange","React","Component","reactDOM","render","document","getElementById"],"mappings":"qKAIe,SAASA,IACpB,OACI,yBAAKC,MAAO,CAACC,UAAU,WACnB,yDACA,4EACA,2BAEI,kBAAC,IAAD,CAAcC,KAAK,4BAA4BC,YAAU,eAAeC,YAAU,OAAOC,mBAAiB,EAAMC,YAAU,UAF9H,WAII,kBAAC,IAAD,CAAcJ,KAAK,4BAA4BC,YAAU,sBAAsBC,YAAU,OAAOC,mBAAiB,EAAMC,YAAU,Y,WCXlI,SAASC,EAAUC,GAC9B,OACI,wBAAIR,MAAO,CAACS,UAAU,OAAOC,MAAM,QAAQC,OAAO,QAAQV,UAAU,SAASW,OAAO,OAAOC,WAAW,QAAQC,SAAS,OAAOC,gBAAgB,QAAQC,UAAU,mBAAmBC,aAAa,SAAUT,EAAMU,QCDzM,SAASC,EAAeX,GACnC,OACQ,wBAAIR,MAAO,CAACU,MAAM,OAAOE,OAAO,YAAYQ,QAAQ,OAAOC,SAAS,SAC/Db,EAAMc,UAAUC,KAAI,SAAAC,GACjB,OACI,kBAACjB,EAAD,CAAWkB,IAAKD,EAAME,MAAOR,OAAQM,EAAMN,a,IC+CpDS,E,4MA/CXC,MAAM,CACJC,YAAY,GACZP,UAAUQ,G,EAGZC,mBAAmB,SAACC,GAIlB,IAAIC,EAAgBH,EAAUI,QAAO,SAAAC,GAEnC,IAAIC,EAAaJ,EAAEK,OAAOC,MAAMC,cAEhC,QAAGJ,EAAKT,MAAMa,cAAcC,SAASJ,MAGlCD,EAAKM,SAASF,cAAcC,SAASJ,MAQ1C,EAAKM,SAAS,CACZb,YAAYG,EAAEK,OAAOC,MACrBhB,UAAUW,K,4CAIhB,WAEQ,OADNU,QAAQC,IAAI,gBAAgBC,KAAKjB,MAAMC,aAE/B,yBAAKiB,UAAU,MAAM9C,MAAO,CAACe,gBAAgB,YAC3C,kBAAChB,EAAD,MACA,yBAAKC,MAAO,CAACoB,QAAQ,OAAO2B,eAAe,WACzC,2BAAOC,KAAK,OAAOhD,MAAO,CAACc,SAAS,OAAOJ,MAAM,QAAQuC,QAAQ,MAAMC,QAAQ,OAAOjC,aAAa,MAAMkC,OAAO,wBAA8BC,SAAUP,KAAKd,sBAE/J,kBAACZ,EAAD,CAAgBG,UAAWuB,KAAKjB,MAAMN,iB,GAvClC+B,IAAMC,W,cCFxBC,EAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.b6c9c5e1.chunk.js","sourcesContent":["import React from 'react'\nimport GitHubButton from 'react-github-btn'\n\n\nexport default function Header() {\n    return (\n        <div style={{textAlign:\"center\"}}>\n            <h1>Search Emoji &#x1F984;</h1>\n            <p>A simple emoji search tool made with ReactJS.</p>\n            <p>\n\n                <GitHubButton href=\"https://github.com/nrcool\" data-icon=\"octicon-star\" data-text=\"Star\" data-show-count={true} data-size=\"large\"/>\n                &nbsp;&nbsp;\n                <GitHubButton href=\"https://github.com/nrcool\" data-icon=\"octicon-repo-forked\" data-text=\"Fork\" data-show-count={true} data-size=\"large\"/>\n\n            </p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function EmojiItem(props) {\n    return (\n        <li style={{listStyle:\"none\",width:\"200px\",height:\"200px\",textAlign:\"center\",margin:\"10px\",lineHeight:\"200px\",fontSize:\"50px\",backgroundColor:\"white\",boxShadow:\"3px 5px 5px gray\",borderRadius:\"25px\"}}>{props.symbol}</li>\n    )\n}\n","import React from 'react'\nimport EmojiItem from './EmojiItem'\n\nexport default function EmojiContainer(props) {\n    return (\n            <ul style={{width:\"80vw\",margin:\"20px auto\",display:\"flex\",flexWrap:\"wrap\"}}>\n                {props.emojiData.map(emoji=>{\n                    return(\n                        <EmojiItem key={emoji.title} symbol={emoji.symbol}/>\n                    )\n                })}\n            </ul>\n    )\n}\n","\nimport React from 'react';\nimport Header from './components/Header';\nimport emojiList from \"./json/emoji.json\"\nimport EmojiContainer from './components/EmojiContainer';\n\n\nclass App extends React.Component{\n    state={\n      searchValue:\"\",\n      emojiData:emojiList\n    }\n    //custom method\n    grabValueFromInput=(e)=>{\n     /*  console.log(\"user is typing\") */\n      //store input data into state\n\n      let filteredEmoji = emojiList.filter(item=>{\n        //input value \n        let inputvalue = e.target.value.toLowerCase()\n\n        if(item.title.toLowerCase().includes(inputvalue)){\n          return true\n        }\n        if(item.keywords.toLowerCase().includes(inputvalue))\n        {\n          return true\n        }\n        return false\n\n      })\n\n      this.setState({\n        searchValue:e.target.value,\n        emojiData:filteredEmoji\n      })\n    }\n\n  render() {\n    console.log(\"render in App\",this.state.searchValue)\n          return (\n            <div className=\"App\" style={{backgroundColor:\"#EAEDF0\"}}>\n              <Header/>\n              <div style={{display:\"flex\",justifyContent:\"center\"}}>\n                <input type=\"text\" style={{fontSize:\"20px\",width:\"400px\",padding:\"5px\",outline:\"none\",borderRadius:\"5px\",border:\"1px solid light-gray\"}}      onChange={this.grabValueFromInput}   />\n              </div>\n              <EmojiContainer emojiData={this.state.emojiData}/>\n            </div>\n          );\n}\n}\n\n\n\n\nexport default App;","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}